package datastructuredemo;

/**
 * 常用的数据结构：
 *      1.栈stack:
 *          特点：
 *              先进后出，
 *              栈的出口和入口都在栈的顶端位置
 *      2.队列queue:
 *          特点：
 *              先进先出
 *              队列的出口和入口各在一端
 *      3.数组:有序的元素序列，连续的存储空间
 *         特点：
 *          查询快：通过引索访问指定位置的元素
 *          增删慢：连续的存储空间，先创建新的对象，再将原数组元素根据索引，复制到新的数组中
 *
 *
 *      4.链表：由一系列的node节点构造,每个节点包含三个部分：
 *              数据源，指针域（一个指向自己的存储地址，另一个指向下一个存储地址）
 *          分类：
 *            单链表：
 *              整个链表结构中只有一条链子，不能保证元素存储和取出的顺序一致
 *            双链表：有序集合
 *               有一条链子专门用来记录元素的顺序
 *          特点：
 *            增删快：非连续的存储空间，增删时不影响链表结构
 *            查询慢：非连续的存储空间，查询就必须从头依次开始查询
 *
 *      5.红黑树：
 *          特点：查询快，趋近于平衡树，查询叶子元素的最大次数和最小次数不能超过2倍；
 *      6.哈希表：
 *          特点：查询特别快
 *         构成：
 *            1.8版本之前：数组+链表
 *            1.8版本之后：数组+链表+红黑树（提高查询效率）
 *            数组结构：按照元素的哈希值进行分组，相同的哈希值为一组，
 *            链表/红黑树结构，把相同的哈希值元素连接在一起
 *            当链表长度大于8时，自动转换成哈希表，提高查询效率
 */
public class MainDemo {
}
