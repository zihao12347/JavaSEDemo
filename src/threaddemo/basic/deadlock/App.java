package threaddemo.basic.deadlock;

/**
 * 死锁：两个或两个以上的线程相互持有对方所需要的资源，由于synchronized的特性，
 *      一个线程获取锁资源，在该线程释放这个锁资源前，其他线程获取不到这个锁资源，
 *      而且一直死等下去，这便造成死锁。
 *   死锁产生的四个条件：
 *         1.互斥性
 *         2.不可剥夺性
 *         3.保存和请求条件
 *         4.循环等待条件
 *
 *
 *
 */
public class App {


}
